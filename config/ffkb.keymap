#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER     1
#define RAISE     2
#define OTHER     3


#define TAPPING_TERM 250
#define QUICK_TAP    150

&lt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};

&mt {
	flavor = "tap-preferred";
	tapping-term-ms = <TAPPING_TERM>;
};
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp LC(Z)>;
        };

        combo_q {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp Q>;
        };
        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&kp SEMI>;
        };
    };
};

/ {

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1 &encoder_2 &encoder_3>;
    };

    behaviors {
        hm: layer_mods {
            compatible = "tap-preferred";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp LC(RIGHT)  LC(LEFT) &inc_dec_kp LC(RIGHT)  LC(LEFT) >;

            bindings = <
    &gresc     &kp Q        &kp W        &kp F       &kp P         &kp B                              &kp J        &kp L     &kp U       &kp Y         &kp SEMI       &kp BSLH
    &kp TAB  &lt 3 A        &lt 2 R        &lt 1 S       &hs LSHIFT T         &kp G                &trans        &kp M        &hs LSHIFT N     &&lt 1 E       &lt 2 I         &lt 3 O    &kp SQT
    &kp LSHIFT &kp Z        &kp X        &kp C       &kp D         &kp V                              &kp K        &kp H     &kp COMMA   &kp DOT       &kp FSLH    &kp MINUS 
                            &trans      &lt 1 LALT    &kp LGUI  &kp BACKSPACE                          &mt LC(LS(LALT)) SPACE &lt 3 ENTER  &lt 2 MINUS     &trans
            >;
        };

        raise_layer {
            label = "Raise";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp LG(EQUAL) LG(MINUS) &inc_dec_kp LG(EQUAL) LG(MINUS)>;

            bindings = <
    &kp GRAVE   &kp N1       &kp N2       &kp N3      &kp N4        &kp N5                                      &kp N6          &kp N7           &kp N8        &kp N9      &kp N0      &kp MINUS
    &trans     &bt BT_CLR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3               &trans           &kp LEFT        &kp DOWN         &kp UP        &kp RIGHT   &kp PLUS    &trans
    &kp LSHIFT &out OUT_USB  &out OUT_BLE       &trans      &trans        &trans                                &rgb_ug RGB_TOG &rgb_ug RGB_EFR  &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD     &trans
                                        &trans      &kp LCTL  &kp LALT  &kp DELETE      &mt SPACE LC(LS(LALT))   &kp LC(LEFT)    &kp LC(RIGHT)      &trans
            >;
        };
        lower_layer {
            label = "Lower  ";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &kp GRAVE   &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PRCNT                                      &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR    &kp EQUAL
    &trans     &bt BT_CLR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3               &trans           &kp LEFT        &kp DOWN         &kp UP        &kp RIGHT   &kp PLUS    &trans
    &kp LSHIFT &out OUT_USB  &out OUT_BLE       &trans      &trans        &trans                                &rgb_ug RGB_TOG &rgb_ug RGB_EFR  &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD     &trans
                                        &trans      &trans        &kp LALT      &kp TAB        &kp LC(LEFT)   &kp LC(UP)    &kp LC(RIGHT)      &trans
            >;
        };
    util_layer {
            label = "Util";

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN &inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            bindings = <
    &kp GRAVE   &gresc &kp GRAVE &kp TILDE &kp DOLLAR &kp PRCNT                                      &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR    &kp EQUAL
    &trans     &kp TAB    &trans  &trans  &trans  &trans               &trans           &kp LEFT        &kp DOWN         &kp UP        &kp RIGHT   &kp PLUS    &trans
    &kp LSHIFT &trans   &trans       &trans      &trans       &bootloader                                &bootloader &rgb_ug RGB_EFR  &rgb_ug RGB_EFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD     &trans
                                        &trans      &trans        &kp LALT      &kp TAB        &kp LC(LEFT)   &kp LC(UP)    &kp LC(RIGHT)      &trans
            >;
        };
    };
};
